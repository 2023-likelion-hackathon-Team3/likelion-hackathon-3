<!DOCTYPE html>
<html>
<head>
    <title>카메라와 사진 편집 예제</title>
    <style>
        #cameraContainer {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        #camera {
            margin-bottom: 10px;
        }
        #imageEditor {
            display: none;
            flex-direction: column;
            align-items: center;
        }
        #previewCanvas,
        #croppedCanvas {
            margin-top: 10px;
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <div id="cameraContainer">
        <h1>카메라와 사진 편집 예제</h1>
        <video id="camera" autoplay></video>
        <button id="takePhotoBtn">사진 찍기</button>
    </div>

    <div id="imageEditor">
        <h2>사진 편집</h2>
        <div>
            <canvas id="previewCanvas"></canvas>
            <button id="cropBtn">자르기</button>
        </div>
        <canvas id="croppedCanvas"></canvas>
    </div>

    <script>
        const cameraContainer = document.getElementById('cameraContainer');
        const imageEditor = document.getElementById('imageEditor');
        const camera = document.getElementById('camera');
        const takePhotoBtn = document.getElementById('takePhotoBtn');
        const previewCanvas = document.getElementById('previewCanvas');
        const previewCtx = previewCanvas.getContext('2d');
        const croppedCanvas = document.getElementById('croppedCanvas');
        const croppedCtx = croppedCanvas.getContext('2d');

        let stream;
        let imageData;

        async function startCamera() {
            try {
                stream = await navigator.mediaDevices.getUserMedia({ video: true });
                camera.srcObject = stream;
            } catch (error) {
                console.error('카메라 접근 오류:', error);
            }
        }

        function takePhoto() {
            previewCanvas.width = camera.videoWidth;
            previewCanvas.height = camera.videoHeight;
            previewCtx.drawImage(camera, 0, 0, previewCanvas.width, previewCanvas.height);
            imageData = previewCtx.getImageData(0, 0, previewCanvas.width, previewCanvas.height);

            cameraContainer.style.display = 'none';
            imageEditor.style.display = 'flex';
            drawPreview();
        }

        function drawPreview() {
            previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
            previewCtx.drawImage(
                camera,
                cropX, cropY, cropWidth, cropHeight,
                0, 0, previewCanvas.width, previewCanvas.height
            );
            requestAnimationFrame(drawPreview);
        }

        function cropImage() {
            const cropX = 50;
            const cropY = 0;
            const cropWidth = 300;
            const cropHeight = 200;

            croppedCanvas.width = cropWidth;
            croppedCanvas.height = cropHeight;
            croppedCtx.drawImage(
                camera,
                cropX, cropY, cropWidth, cropHeight,
                0, 0, croppedCanvas.width, croppedCanvas.height
            );
        }

        takePhotoBtn.addEventListener('click', takePhoto);
        document.getElementById('cropBtn').addEventListener('click', cropImage);

        startCamera();
    </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="./css/scan.css" rel="stylesheet" />
    <title>scan</title>
  </head>
  <body>
    <div id="container">
        <video id="camera" autoplay></video>
        <button id="captureBtn">사진 찍기</button>
        <img id="capturedImage" style="display: none;">
    </div>

    <script>
        async function startCamera() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ video: true });
                const videoElement = document.getElementById('camera');
                videoElement.srcObject = stream;
            } catch (error) {
                console.error('카메라 접근 오류:', error);
            }
        }

        async function capturePhoto() {
            const videoElement = document.getElementById('camera');
            const canvas = document.createElement('canvas');
            canvas.width = videoElement.videoWidth;
            canvas.height = videoElement.videoHeight;
            canvas.getContext('2d').drawImage(videoElement, 0, 0, canvas.width, canvas.height);

            const capturedImage = document.getElementById('capturedImage');
            capturedImage.src = canvas.toDataURL('image/png');
            capturedImage.style.display = 'block';
        }

        document.getElementById('captureBtn').addEventListener('click', capturePhoto);

        startCamera();
    </script>
  </body>
</html>